name: Ig Clone CICD Pipeline

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main ]  
  
jobs:
  Frontend:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Frontend
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
      with:
        ref: dev


    - run: ls

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: Frontend/package-lock.json
    
    # - run: npm ci
    # - run: npm run build --if-present
    
    # - run: npm test
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
 
    - name: Build and push to DockerHub
      if: success()
      uses: docker/build-push-action@v2
      with:
        context: ./Frontend
        push: true
        tags: 11sf/ig_clone_frontend:latest
    
    - name: Configure AWS credentials
      if: success()
      uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}
 
    - name: Create EC2 and deploy application to EC2
      if: success()
      env: 
          KEY_PAIR_NAME: ${{ secrets.AWS_KEYPAIR_NAME }}
          SECGROUP_ID: ${{ secrets.AWS_SECGROUP_ID }}
      run: aws ec2 run-instances --image-id ami-04902260ca3d33422 --instance-type t2.micro  --key-name $KEY_PAIR_NAME --security-group-ids $SECGROUP_ID --user-data file://Frontend/script/user_data_script.txt 
        